[{"G:\\Web Projects\\E-Com\\src\\index.js":"1","G:\\Web Projects\\E-Com\\src\\Routes.js":"2","G:\\Web Projects\\E-Com\\src\\core\\Home.js":"3","G:\\Web Projects\\E-Com\\src\\core\\Cart.js":"4","G:\\Web Projects\\E-Com\\src\\user\\Signup.js":"5","G:\\Web Projects\\E-Com\\src\\auth\\helper\\PrivateRoutes.js":"6","G:\\Web Projects\\E-Com\\src\\user\\Signin.js":"7","G:\\Web Projects\\E-Com\\src\\core\\Card.js":"8","G:\\Web Projects\\E-Com\\src\\core\\Base.js":"9","G:\\Web Projects\\E-Com\\src\\core\\PaymentB.js":"10","G:\\Web Projects\\E-Com\\src\\auth\\helper\\index.js":"11","G:\\Web Projects\\E-Com\\src\\core\\helper\\coreapicalls.js":"12","G:\\Web Projects\\E-Com\\src\\core\\CheckoutCard.js":"13","G:\\Web Projects\\E-Com\\src\\core\\helper\\cartHelper.js":"14","G:\\Web Projects\\E-Com\\src\\user\\helper\\googleLogin.js":"15","G:\\Web Projects\\E-Com\\src\\core\\Menu.js":"16","G:\\Web Projects\\E-Com\\src\\core\\helper\\imageHelper.js":"17","G:\\Web Projects\\E-Com\\src\\backend.js":"18","G:\\Web Projects\\E-Com\\src\\core\\helper\\paymentHelper.js":"19","G:\\Web Projects\\E-Com\\src\\core\\helper\\orderHelper.js":"20","G:\\Web Projects\\E-Com\\src\\user\\helper\\fbLogin.js":"21","G:\\Web Projects\\E-Com\\src\\user\\MyOrders.js":"22","G:\\Web Projects\\E-Com\\src\\user\\helper\\OrderCard.js":"23"},{"size":229,"mtime":1608098828922,"results":"24","hashOfConfig":"25"},{"size":745,"mtime":1619118415213,"results":"26","hashOfConfig":"25"},{"size":1008,"mtime":1609502551531,"results":"27","hashOfConfig":"25"},{"size":2218,"mtime":1609598067436,"results":"28","hashOfConfig":"25"},{"size":4419,"mtime":1611050782876,"results":"29","hashOfConfig":"25"},{"size":612,"mtime":1609180966257,"results":"30","hashOfConfig":"25"},{"size":6916,"mtime":1619083100760,"results":"31","hashOfConfig":"25"},{"size":2550,"mtime":1609525829657,"results":"32","hashOfConfig":"25"},{"size":1417,"mtime":1619083100525,"results":"33","hashOfConfig":"25"},{"size":5396,"mtime":1611050782877,"results":"34","hashOfConfig":"25"},{"size":1672,"mtime":1611050782877,"results":"35","hashOfConfig":"25"},{"size":473,"mtime":1619117568974,"results":"36","hashOfConfig":"25"},{"size":1452,"mtime":1609528194396,"results":"37","hashOfConfig":"25"},{"size":1213,"mtime":1609690454594,"results":"38","hashOfConfig":"25"},{"size":465,"mtime":1619083100762,"results":"39","hashOfConfig":"25"},{"size":2373,"mtime":1619113976071,"results":"40","hashOfConfig":"25"},{"size":538,"mtime":1608922235866,"results":"41","hashOfConfig":"25"},{"size":51,"mtime":1616821787089,"results":"42","hashOfConfig":"25"},{"size":707,"mtime":1611050782877,"results":"43","hashOfConfig":"25"},{"size":492,"mtime":1611050782876,"results":"44","hashOfConfig":"25"},{"size":309,"mtime":1619083100761,"results":"45","hashOfConfig":"25"},{"size":1201,"mtime":1619117624005,"results":"46","hashOfConfig":"25"},{"size":622,"mtime":1619117866786,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1inr85k",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"G:\\Web Projects\\E-Com\\src\\index.js",[],["104","105"],"G:\\Web Projects\\E-Com\\src\\Routes.js",[],"G:\\Web Projects\\E-Com\\src\\core\\Home.js",[],"G:\\Web Projects\\E-Com\\src\\core\\Cart.js",["106","107","108","109"],"import React,{useState,useEffect, Fragment} from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport Base from './Base';\r\nimport Card from './Card';\r\nimport { loadCart } from './helper/cartHelper';\r\nimport CheckoutCard from './CheckoutCard';\r\nimport PaymentB from './PaymentB';\r\n\r\nconst Cart = () =>{\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [products, setProducts] = useState([])\r\n    const [reload, setReload] = useState(false)\r\n\r\n  \r\n    useEffect(() => {\r\n        setProducts(loadCart())\r\n    }, [reload])\r\n\r\n    const loadProducts = ()=>{\r\n        return(\r\n            <div >\r\n                {products.map((product)=>{\r\n                    return(\r\n                        <CheckoutCard\r\n                        key = {product.id}\r\n                        product = {product}\r\n                        onReload = {setReload}\r\n                        reload = {reload}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    const loadCheckout = ()=>{\r\n       return(\r\n        <h1>\r\n            Checkout\r\n        </h1>\r\n    )}\r\n    const bodyOfcart = () =>{\r\n        if(!isAuthenticated())\r\n            return <Redirect to='/signin'/>\r\n        if(products.length===0){\r\n            return (\r\n                <Base title=\"Your Cart\" description=\"No items in your cart...\">\r\n                </Base>\r\n            )\r\n        }\r\n        return(\r\n            <Base title=\"Your Cart\" description=\"Checkout to pay\">\r\n           \r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-6\">\r\n                        {loadProducts()}\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <PaymentB\r\n                            products ={products}\r\n                            reload = {reload}\r\n                            setReload ={setReload}\r\n                        />\r\n                    </div>\r\n                    \r\n                </div>\r\n        </Base>\r\n        )\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {bodyOfcart()}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart;","G:\\Web Projects\\E-Com\\src\\user\\Signup.js",[],"G:\\Web Projects\\E-Com\\src\\auth\\helper\\PrivateRoutes.js",[],["110","111"],"G:\\Web Projects\\E-Com\\src\\user\\Signin.js",["112"],"import React ,{useState}from 'react'\r\nimport Base from '../core/Base'\r\nimport { signin, authenticate, isAuthenticated } from '../auth/helper/index';\r\nimport { Redirect } from 'react-router-dom';\r\nimport googleLogin from \"./helper/googleLogin\"\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport fbLogin from './helper/fbLogin';\r\nimport {API} from '../backend';\r\n\r\nexport default function Signin() {\r\n\r\n    const [values, setValues] = useState({\r\n        email:\"black_marlin@gmauuuuil.com\",\r\n        password:\"MorganStanley\",\r\n    })\r\n    const {email,password}=values;\r\n    const [loadingmessage, setloadingmessage] = useState(false)\r\n    const [didRedirect, setDidRedirect] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n   \r\n    \r\n    const onSubmitHandler =(event) =>{\r\n        event.preventDefault()\r\n        setDidRedirect(false)\r\n        signin({email,password})\r\n            .then(responseData=>{\r\n                console.log(\"Response Data after signin: \", responseData);\r\n                if(responseData.token){\r\n                    authenticate(responseData,()=>{\r\n                        console.log(\"token added to local storage\");\r\n                        setError('')\r\n                        setloadingmessage(true);\r\n                        setTimeout(()=>setDidRedirect(true),2000)\r\n                        \r\n                    })\r\n                }\r\n                else{\r\n                    setloadingmessage(false)\r\n                    setDidRedirect(false)\r\n                    if(responseData.Error){\r\n                        setError(responseData.Error)\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => console.log(\"Signin Form Submit error\",err))\r\n\r\n    }\r\n    const redirectAfterSignin = () =>{\r\n        if(isAuthenticated() && didRedirect){\r\n            return <Redirect to='/'/>\r\n        }\r\n    }\r\n    const LoadingMessage = () =>{\r\n        return (\r\n            loadingmessage && (\r\n                <div className=\"col-4 alert alert-info offset-4\">\r\n                    <h2>Redirecting to Home Page</h2>\r\n                </div>\r\n            )\r\n        )\r\n\r\n    }\r\n  \r\n    const errorMessage = () =>{\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-4 offset-4\">\r\n                    <div className=\"alert alert-warning\">\r\n                   {error}\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const stateChangeHandler= state => event => setValues( values =>{\r\n        return(\r\n            {...values,[state]:event.target.value}\r\n        \r\n    )})\r\n    const SigninForm = () => {\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"jumbotron col-md-4 offset-sm-4 text-left\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-dark\">Email</label>\r\n                                <input \r\n                                type=\"email\" \r\n                                className=\"form-control\"\r\n                                value = {email}\r\n                                required\r\n                                onChange = {stateChangeHandler(\"email\")}\r\n                                />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-dark\">Password</label>\r\n                                <input \r\n                                type=\"password\" \r\n                                className=\"form-control\"\r\n                                value = {password}\r\n                                required\r\n                                onChange = {stateChangeHandler(\"password\")}\r\n                                />\r\n                        </div>\r\n                        <button \r\n                        onClick = {onSubmitHandler}\r\n                        className=\"btn btn-success btn-block\">Submit</button>\r\n                        <div className=\"text-center m-3\">\r\n                            <GoogleLogin\r\n                            clientId=\"994732738453-i7nsteu16ub91els1r4l753nfnagaf0s.apps.googleusercontent.com\"\r\n                            buttonText=\"LOGIN WITH GOOGLE\"\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={responseGoogle}\r\n                            />\r\n                        </div>\r\n                        <div className=\"text-center m-3\">\r\n                            <FacebookLogin\r\n                            appId=\"226280195908296\"\r\n                            fields=\"name,email,picture\"\r\n                            callback={responseFacebook}\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const responseGoogle = async(response) => {\r\n        console.log(response);\r\n        let googleID = response.googleId\r\n        let googleResponse  = await googleLogin(response.accessToken);\r\n        console.log(\"ended\");\r\n        console.log(googleResponse);\r\n        if(googleResponse===200){\r\n            console.log(\"hee\");\r\n            let allUsers = await getAllUsers();\r\n            console.log(allUsers);\r\n            const googleUser = allUsers.filter(e=>e.email===response.profileObj.email);\r\n            const browserToken = {\r\n              \"user\" : googleUser[0],\r\n              \"token\": response.accessToken\r\n            }\r\n            console.log(browserToken);\r\n            authenticate(browserToken,()=>{\r\n                console.log(\"token added to local storage\");\r\n                setError('')\r\n                setloadingmessage(true);\r\n                setTimeout(()=>setDidRedirect(true),2000)\r\n                \r\n            });\r\n          }\r\n      }\r\n      const getAllUsers =()=>{\r\n        return fetch(`${API}user/`,{\r\n          method: \"GET\",\r\n      })\r\n      .then(response=>response.json())\r\n      .catch(err=>console.log(err))\r\n      }\r\n      const responseFacebook = async (response) => {\r\n        console.log(response);\r\n        let fbId = response.userID;\r\n        let fbResponse  = await fbLogin(response.accessToken);\r\n        console.log(\"ended\");\r\n        console.log(fbResponse);\r\n        if(fbResponse===200){\r\n            authenticate(fbId,()=>{\r\n                console.log(\"token added to local storage\");\r\n                setError('')\r\n                setloadingmessage(true);\r\n                setTimeout(()=>setDidRedirect(true),2000)\r\n                \r\n            });\r\n        }\r\n      }\r\n    return (\r\n        <Base title=\"Login to Marlin Tees\" description = \"Signin to Continue Shopping\">\r\n        {error && errorMessage()}\r\n        <LoadingMessage/>\r\n        {SigninForm()}     \r\n        {redirectAfterSignin()}\r\n        </Base>\r\n    )\r\n}\r\n","G:\\Web Projects\\E-Com\\src\\core\\Card.js",["113"],"import React ,{useState} from 'react';\r\nimport ImageHelper from \"./helper/imageHelper\";\r\nimport './core.css'\r\nimport {addItemToCart,removeItemFromCart} from './helper/cartHelper'\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Card = ({ product,addtocart=true,removefromcart=true,history}) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    const addToCart = ()=>{\r\n      if(isAuthenticated()){\r\n        addItemToCart(product,quantity,()=>{})\r\n        console.log('Authenticated User,Item added to cart');\r\n      }\r\n      else\r\n        console.log(\"Login Please\");\r\n\r\n        history.push('/cart')\r\n    }\r\n\r\n\r\n    // const redirectUser = (redirect) =>{\r\n    //     if (redirect){\r\n    //       return <Redirect to='/cart'/>\r\n    //     }\r\n    // }\r\n\r\n\r\n    const showAddToCart = addtocart =>{\r\n      return addtocart && (\r\n        <button\r\n                onClick={addToCart}\r\n                className=\"btn btn-block btn-outline-success mt-2 mb-2\"\r\n              >\r\n                Add to Cart\r\n              </button>\r\n      )\r\n    }\r\n\r\n\r\n   \r\n\r\n    const decrementQuantity = ()=>{\r\n        if(quantity>1){\r\n          setQuantity((prevQuantity)=>prevQuantity-1)\r\n        }\r\n    }\r\n    const incrementQuantity = ()=>{\r\n          setQuantity((prevQuantity)=>prevQuantity+1)\r\n    }\r\n    return (\r\n      \r\n      <div className=\"card text-white  border border-dark \" >\r\n        <div className=\"card-header lead\">{product.name}</div>\r\n        <div className=\"card-body\">\r\n          <ImageHelper product = {product}/>\r\n          <p className=\"lead  rounded bg-info font-weight-normal text-wrap text-center\">\r\n            {product.description}\r\n          </p>\r\n          \r\n\t\t\t\t\t<h4>Quantity:</h4>\r\n\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"quantity\" value={quantity} readOnly='readonly'/>\r\n            <i className=\"fa fa-caret-left m-2 btn-lg dec\" aria-hidden=\"true\" onClick={decrementQuantity}></i>\r\n            <i className=\"fa fa-caret-right m-2 btn-lg inc\" aria-hidden=\"true\" onClick = {incrementQuantity}></i>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\r\n          <p className=\"btn btn-secondary rounded btn-sm px-4\">$ {product.price}</p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              {showAddToCart(addtocart)}\r\n            </div>\r\n            {/* <div className=\"col-12\">\r\n              {removeFromCart(removefromcart)}\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default withRouter(Card);\r\n\r\n","G:\\Web Projects\\E-Com\\src\\core\\Base.js",["114"],"import React from 'react'\r\nimport Menu from './Menu'\r\n\r\nexport default function Base({\r\n    title = 'The Base Page',\r\n    className = 'bg-dark text-white p-4',\r\n    description = 'My description',\r\n    children \r\n}) {\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <div>\r\n            <Menu/>\r\n            <div className=\"container-fluid mt-4\">\r\n                <div className=\"jumbotron bg-light text-dark text-center\">\r\n                    <h2 className=\"display-4\">\r\n                        {title}\r\n                    </h2>\r\n                    <p className='lead'>{description}</p>\r\n                </div>\r\n                <div className={className}>{children}</div>\r\n            </div>\r\n            <footer className=\"footer bg-dark mt-auto py-3\">\r\n                <div className=\"container-fuild text-white text-center py-3\" style={{background:\"#046150\"}}>\r\n                    <h4>For any queries reach me out on instagram</h4>\r\n                    \r\n                        <a href=\"https://www.linkedin.com/in/theblackmarlin/\" target=\"_blank\"><button className=\"btn btn-dark btn-lg\" > Contact me</button></a>\r\n                    <div className=\"container\">\r\n                        <span className='text-danger'>\r\n                            Django Reacteeeeeeeeeeerrrrrrr\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n}\r\n","G:\\Web Projects\\E-Com\\src\\core\\PaymentB.js",["115","116","117","118","119"],"import React,{Fragment, useEffect, useState} from 'react'\r\nimport { isAuthenticated, signout } from '../auth/helper/index';\r\nimport { getToken, processPayment } from './helper/paymentHelper';\r\nimport { withRouter } from 'react-router-dom';\r\nimport DropIn from 'braintree-web-drop-in-react'\r\nimport { createOrder } from './helper/orderHelper';\r\nimport { emptyCart } from './helper/cartHelper';\r\n\r\nconst PaymentB=(props)=> {\r\n\r\n\r\n    const {products,setReload,history,reload} = props\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [clientToken, setClientToken] = useState(null)\r\n    const [error, setError] = useState('')\r\n    const [instance, setInstance] = useState({})\r\n\r\n    const userId =  isAuthenticated() && isAuthenticated().user.id\r\n    const token = isAuthenticated() && isAuthenticated().token\r\n\r\n    useEffect(() => {\r\n        genToken(userId,token)\r\n        \r\n    },[])\r\n\r\n    const genToken=(userId,token)=>{\r\n        getToken(userId,token)\r\n            .then(responseData=>{\r\n                if(responseData.Error){\r\n                    setError(responseData.Error)\r\n                    signout(()=>history.push('/'))\r\n                }\r\n                else{\r\n                    console.log(responseData);\r\n                    const ct = responseData.client_token\r\n                    setClientToken(ct)\r\n                }\r\n            })\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n    const getNetAmount = () =>{\r\n        let amt = 0;\r\n        products.map((product)=>\r\n            amt+= product.quantity*product.price\r\n   )\r\n        return amt;\r\n    }\r\n    const showDropIn  = () =>{\r\n        return(\r\n            <div>\r\n                {clientToken!==null && \r\n                <Fragment>\r\n                    <DropIn\r\n                options  = {{authorization: clientToken}}\r\n                onInstance = {(obj)=>(setInstance(obj))}\r\n                />\r\n            <button className='btn btn-block btn-warning' onClick = {onPurchase}>Buy Now</button>\r\n                </Fragment>\r\n                \r\n            }\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    const onPurchase=()=>{\r\n        setLoading(true)\r\n        let nonce;\r\n        let getNonce = instance.requestPaymentMethod()\r\n            .then(data =>{\r\n                nonce = data.nonce\r\n                const paymentData = {\r\n                    paymentMethodNonce : nonce,\r\n                    amount : getNetAmount()\r\n                }\r\n                processPayment(userId,token,paymentData)\r\n                    .then(responseData=>{\r\n                        if(responseData.Error){\r\n                            if(responseData.code === '1'){\r\n                                console.log(\"Payment Failed\");\r\n                                signout(()=>{})\r\n                            }\r\n                        }\r\n                        else{\r\n                                console.log(responseData)\r\n                                setLoading(false)\r\n                                setSuccess(true)\r\n                                console.log(\"Payment Success\");\r\n                                let product_names = []\r\n                                products.forEach((item)=>{\r\n                                    product_names+= item.name + ','\r\n                                })\r\n                                const orderData ={\r\n                                    products: product_names,\r\n                                    transaction_id: responseData.transaction.id,\r\n                                    total_amount: responseData.transaction.amount\r\n                                }\r\n                                createOrder(userId,token,orderData)\r\n                                    .then(response=>{\r\n                                        if(response.Error){\r\n                                            if(response.code==='1'){\r\n                                                console.log(\"Order Failed\");\r\n                                                setSuccess(false)\r\n                                            }\r\n                                            signout(()=>{})\r\n                                        }\r\n                                        else{\r\n                                                if(response.success){\r\n                                                    console.log(\"Order Placed\");\r\n                                                }\r\n                                        }\r\n                                    })\r\n                                    .catch(err=>{\r\n                                        console.log(\"Order failed\")\r\n                                        setSuccess(false)\r\n                                        setLoading(false)\r\n                                    })\r\n                                    emptyCart(()=>console.log(\"cart Empty now\"))\r\n                                    setReload(!reload)\r\n                        }\r\n                    })\r\n                    .catch(err=>console.log(err))\r\n            })\r\n            .catch(err=>console.log(`Payment error`,err))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Your Bill is: Rs  {getNetAmount()}</h3>\r\n            {showDropIn()}\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(PaymentB);","G:\\Web Projects\\E-Com\\src\\auth\\helper\\index.js",[],"G:\\Web Projects\\E-Com\\src\\core\\helper\\coreapicalls.js",[],"G:\\Web Projects\\E-Com\\src\\core\\CheckoutCard.js",[],"G:\\Web Projects\\E-Com\\src\\core\\helper\\cartHelper.js",[],"G:\\Web Projects\\E-Com\\src\\user\\helper\\googleLogin.js",["120"],"import axios from \"axios\";\r\nimport {API} from '../../backend';\r\n/**\r\n * \r\n * @param {*} accesstoken This is the accesstoken of the user obtained from Google\r\n */\r\nconst googleLogin = async (accesstoken) => {\r\n    let res = await axios.post(\r\n      `https://marlin-the-watch-store.herokuapp.com/rest-auth/google/`,\r\n      {\r\n        access_token: accesstoken,\r\n      }\r\n    );\r\n    console.log(res);\r\n    return await res.status;\r\n  };\r\n\r\nexport default googleLogin;","G:\\Web Projects\\E-Com\\src\\core\\Menu.js",["121","122"],"import React, { Fragment } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport './core.css'\r\nimport { isAuthenticated, signout } from '../auth/helper/index';\r\nconst Menu = ({history,path})=> {\r\n\r\n    const currentTab = (history,path) =>{\r\n        if(history.location.pathname === path)\r\n            return {color: 'white',background:\"#011c01\"}\r\n        return {color: 'white'}\r\n    }\r\n\r\n    return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n\r\n        <ul className=\"navbar-nav mr-auto\">\r\n\r\n        <li className=\"nav-item active m-2 \">\r\n            <Link className=\"nav-link  px-4 rounded-lg mynav\" to = '/' style = {currentTab(history,'/')} >Home </Link>\r\n        </li>\r\n        {isAuthenticated() && \r\n            <Fragment>\r\n                <li className=\"nav-item active m-2 \">\r\n                    <Link className=\"nav-link  px-4 rounded-lg mynav\" to = '/my-orders' style = {currentTab(history,'/my-orders')} >My Orders</Link>\r\n                </li>\r\n                <li className=\"nav-item active m-2 \">\r\n                    <Link className=\"nav-link  px-4 rounded-lg mynav\" to = '/cart' style = {currentTab(history,'/cart')} >Cart </Link>\r\n                </li>\r\n            </Fragment>\r\n        } \r\n        </ul>\r\n\r\n\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n        {!isAuthenticated() && \r\n            <Fragment>\r\n                <li className=\"nav-item active m-2 \">\r\n                    <Link className=\"nav-link  px-4 rounded-lg mynav\" to = '/signin' style = {currentTab(history,'/signin')} >Login </Link>\r\n                </li>\r\n                <li className=\"nav-item active m-2 \">\r\n                    <Link className=\"nav-link  px-4 rounded-lg mynav\" to = '/signup' style = {currentTab(history,'/signup')} >Signup </Link>\r\n                </li>\r\n            </Fragment>\r\n        }\r\n        {isAuthenticated() &&\r\n            <li className=\"nav-item active m-2 \">\r\n            <a className=\"nav-link  px-4 rounded-lg mynav\" style = {currentTab(history,'/signout'),{background:\"#c45f1b\"}}\r\n                href = '#' onClick = {()=>{signout(()=>history.push('/'))}}\r\n            >Signout </a>\r\n            </li>\r\n        \r\n        }\r\n        \r\n        </ul>\r\n    </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Menu);\r\n\r\n","G:\\Web Projects\\E-Com\\src\\core\\helper\\imageHelper.js",[],"G:\\Web Projects\\E-Com\\src\\backend.js",[],"G:\\Web Projects\\E-Com\\src\\core\\helper\\paymentHelper.js",[],"G:\\Web Projects\\E-Com\\src\\core\\helper\\orderHelper.js",[],"G:\\Web Projects\\E-Com\\src\\user\\helper\\fbLogin.js",[],"G:\\Web Projects\\E-Com\\src\\user\\MyOrders.js",["123"],"import React from 'react'\r\nimport { getOrder } from '../core/helper/coreapicalls'\r\nimport Base from '../core/Base';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport OrderCard from './helper/OrderCard';\r\nimport {useState,useEffect} from 'react'\r\nconst MyOrders = () =>{\r\n    const userId =  isAuthenticated() && isAuthenticated().user.id\r\n    const [orders, setOrders] = useState([])\r\n\r\n    useEffect(() =>{\r\n        getOrder().then(responseData =>{\r\n            let userOrders = responseData.filter(e=>e.user===userId);\r\n            setOrders(userOrders);\r\n        })\r\n        .catch(err =>console.log('Erroring Fetching [ORDER] from DB',err))\r\n    },[])\r\n\r\n\r\n    return (\r\n        <Base\r\n        title = \"My Orders\"\r\n        description = 'Check out your placed orders'\r\n        >\r\n            <div className=\"row\">\r\n            {orders.map((order,index) =>{\r\n                return(\r\n                    <div key = {index} className='col-4'>\r\n                        <OrderCard\r\n                            order = {order}\r\n                        />\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default MyOrders;","G:\\Web Projects\\E-Com\\src\\user\\helper\\OrderCard.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":12,"column":12,"nodeType":"130","messageId":"131","endLine":12,"endColumn":20},{"ruleId":"128","severity":1,"message":"133","line":12,"column":22,"nodeType":"130","messageId":"131","endLine":12,"endColumn":33},{"ruleId":"128","severity":1,"message":"134","line":37,"column":11,"nodeType":"130","messageId":"131","endLine":37,"endColumn":23},{"ruleId":"124","replacedBy":"135"},{"ruleId":"126","replacedBy":"136"},{"ruleId":"128","severity":1,"message":"137","line":132,"column":13,"nodeType":"130","messageId":"131","endLine":132,"endColumn":21},{"ruleId":"128","severity":1,"message":"138","line":4,"column":23,"nodeType":"130","messageId":"131","endLine":4,"endColumn":41},{"ruleId":"139","severity":1,"message":"140","line":30,"column":79,"nodeType":"141","endLine":30,"endColumn":94},{"ruleId":"128","severity":1,"message":"142","line":14,"column":12,"nodeType":"130","messageId":"131","endLine":14,"endColumn":19},{"ruleId":"128","severity":1,"message":"143","line":15,"column":12,"nodeType":"130","messageId":"131","endLine":15,"endColumn":19},{"ruleId":"128","severity":1,"message":"144","line":17,"column":12,"nodeType":"130","messageId":"131","endLine":17,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":26,"column":7,"nodeType":"147","endLine":26,"endColumn":9,"suggestions":"148"},{"ruleId":"128","severity":1,"message":"149","line":73,"column":13,"nodeType":"130","messageId":"131","endLine":73,"endColumn":21},{"ruleId":"128","severity":1,"message":"150","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":50,"column":13,"nodeType":"153","endLine":52,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":50,"column":99,"nodeType":"156","messageId":"157","endLine":50,"endColumn":100},{"ruleId":"145","severity":1,"message":"158","line":17,"column":7,"nodeType":"147","endLine":17,"endColumn":9,"suggestions":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'loadCheckout' is assigned a value but never used.",["160"],["161"],"'googleID' is assigned a value but never used.","'removeItemFromCart' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'loading' is assigned a value but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'genToken', 'token', and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["162"],"'getNonce' is assigned a value but never used.","'API' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [genToken, token, userId]",{"range":"168","text":"169"},"Update the dependencies array to be: [userId]",{"range":"170","text":"171"},[946,948],"[genToken, token, userId]",[661,663],"[userId]"]